name: Deploy Production

on:
  push:
    branches:
      - 'main'

jobs:
  Get-Branch:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Get PR info
        id: get-pr-info
        uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
      - run: |
          echo ${{ steps.get-pr-info.outputs.number}}
      - name: Get last commit SHA
        id: get_sha
        run: |
          echo "sha=${{ github.event.before }}" >> $GITHUB_OUTPUT

      - name: Search branch by name
        id: get_branch_id
        env:
          PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
          API_KEY: ${{ secrets.NEON_API_KEY }}
          SHA: ${{ steps.get_sha.outputs.sha }}
        run: |
          branch_id=$(curl --silent \
            "https://console.neon.tech/api/v2/projects/${PROJECT_ID}/branches" \
            --header "Accept: application/json" \
            --header "Content-Type: application/json" \
            --header "Authorization: Bearer ${API_KEY}" \
            | jq -r .branches \
            | jq -c '.[] | select(.name | contains("'${SHA}'")) .id' \
            | jq -r \
            ) \

          echo "branch_id=${branch_id}" >> $GITHUB_OUTPUT

  Run-Migrations:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Prisma Migrate
        run: |
          touch .env
          echo DATABASE_URL="${{secrets.DATABASE_URL}}" >> .env
          echo DIRECT_DATABASE_URL="${{secrets.DIRECT_DATABASE_URL}}" >> .env
          npx prisma migrate deploy

  Deploy-Production:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${VERCEL_TOKEN}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${VERCEL_TOKEN}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${VERCEL_TOKEN}

  Delete-Neon-Branch:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v2
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_id: ${{ steps.get_branch_id.outputs.branch_id }}
          api_key: ${{ secrets.NEON_API_KEY }}

name: Deploy Preview

on: [pull_request]

jobs:
  create_neon_branch:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      db_url: ${{ steps.create_branch.outputs.db_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{github.event.after}}

      - name: Get PR SHA
        id: get_pr_sha
        run: |
          pr_sha=$(jq --raw-output .pull_request.base.sha "$GITHUB_EVENT_PATH")
          echo "pr_sha=`echo ${pr_sha} | cut -c1-8`" >> $GITHUB_OUTPUT
          echo $pr_sha

      - name: Create Branch
        uses: neondatabase/create-branch-action@v2
        id: create_branch
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: ${{steps.get_pr_sha.outputs.pr_sha}}
          api_key: ${{ secrets.NEON_API_KEY }}
          username: ${{ secrets.PG_USERNAME }}
          password: ${{ secrets.PG_PASSWORD }}

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Neon branch created successfully :elephant: : https://console.neon.tech/app/projects/${{ secrets.NEON_PROJECT_ID }}/branches/${{ steps.create_branch.outputs.branch_id }}

      - name: Run Prisma Migrate
        env:
          DATABASE_URL: ${{ steps.create_branch.outputs.db_url}}/neondb
          DIRECT_DATABASE_URL: ${{ steps.create_branch.outputs.db_url}}/neondb
        run: |
          touch .env
          echo DIRECT_DATABASE_URL=${DIRECT_DATABASE_URL} >> .env
          echo DATABASE_URL=${DATABASE_URL} >> .env
          npx prisma generate
          npx prisma migrate deploy

  # If migration fails, exit workflow?

  deploy-preview:
    needs: create_neon_branch
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install --global vercel@latest
          vercel pull --yes --environment=preview --token=${VERCEL_TOKEN}
          vercel build --token=${VERCEL_TOKEN}
          preview_url=$(vercel deploy --prebuilt --token=${VERCEL_TOKEN})
          echo "preview_url=${preview_url}" >> $GITHUB_OUTPUT
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Vercel Preview URL :rocket: : ${{ steps.deploy.outputs.preview_url }}
